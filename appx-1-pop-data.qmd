# Historic Population Data and its Georeferences {#sec-AppxPopData}

```{r}
#| label: appx1-packages-data

require(tidyverse)

options(scipen = 10)

# Load population data
if (!file.exists('data/temp/population.RData')) {
  stop('Please run prep-population-data.R before running this script')
} else {
  load('data/temp/population.RData')
}
```

The R script `prep-pop-data.R` prepares the historical population data and its georeferences for joining it with the weather data and using it in the econometric estimation.
The script is submitted together with this thesis paper, but can also be retrieved via the Git repo of this thesis project [@arendt-2025-mathesis-git-repo].
This appendix ([-@sec-AppxPopData]) explains in further detail the operations performed by the script, and gives some more background on the data.

As mentioned in @sec-SubsecPopData, the shapefiles from the *EuroBoundaryMap* geo-database [@eurogeographics-2025-euroboundarymap-website] can be used for most countries.
Fortunately, Eurostat offers them free of charge but subject to Copyright and non-commercial use conditions on its website [@eurostat-2025-gisco-lau-download-website].
They can also be retrieved easily via an API, of which the R script makes use with help of the *giscoR* package [@hernangomez-2025-package-giscoR].
For details on the mentioned copyright and restrictions see @eurostat-2025-gisco-copyright-website and @gloersen-luer-2013-report-data-collect.

After retrieving the *EuroBoundaryMap* shapefiles, I manually load the separately delivered shapefiles for Greece, Ireland and Turkey [available on the same website as the historical population figures, @eurostat-2023-lau-website].
I then transform their coordinate reference systems (CRS) to ensure that they are harmonised and correspond to the CRS of the weather grid data.
While the weather grid data is retrieved with the traditional `OGC:CRS84` CRS, the shapefiles for the LAU boundaries are delivered with `EPSG:4326`, `ETRS89` or `ED50` CRS, depending on delivery.
Fortunately, the *EuroBoundaryMap* shapefiles, which are used for all except the three countries mentioned before, come with the `EPSG:4326` CRS. As the `EPSG:4326` CRS and the `OGC:CRS84` CRS both have the *WGS84* as their underlying reference ellipsoid and only differ in the longitude-latitude order, transforming them.

-   **add that it is not actually based on the standard WGS84, but rather on the WGS84 for computer usage (where x and y axes are interchanged) see sf documentation for a brief explanation** @package-sf **; OGC:CRS84 is considered the "traditional" GIS order, supposed standard is to have longitude as the first coordinate, and latitude as the second** cite package documentation for command *sf::st_transform()*

-   shapes retrieved via GISCO API and special cases delivered on EUROSTAT project website

-   however the special cases (Greece, Ireland, and Turkey) are shapes that are projections for different Geodetic CRS, and they are transformed accordingly (to EPSG:4326 - WGS84)

-   transformations may produce some inaccuracies:

    -   Greece by 1.0 m (from EPSG:3035 - ETRS89-extended / LAEA Europe)
    -   Ireland accuracy unknown (from EPSG:4258 - ETRS89)
    -   Turkey by 2.0 m (from EPSG:4230 - ED50)
    -   more information on [**epsg.io**](epsg.io)

-   Neither the population data shapefiles nor the weather grid data specify which version of the WGS84 coordinate reference system they refer to.
    However, any potential version differences, whether they be caused by improved accuracy of the datum or by tectonic plate movements, are considered to have little to no influence on this research set up.
    The dimensions and sizes of the geographical units under investigation are disproportionately bigger than any of the potential datum shifts caused by the differing WGS84 versions.
    Besides, potential misalignents due to tectonic plate movement are unlikely as this investigation focuses on a single continent, and almost all of the investigated land mass lies on the same principal tectonic plates (with Macaronesia and Iceland being only minor exceptions, **are there any other exceptions?? --\> plot map quickly with leaflet**)

-   Add another column to table denoting for each country the year for which its boundaries have been recalculated (either 2011 or 2012)

```{r}
#| eval: false

shapes_2011 |> filter(startsWith(CNTR_LAU_ID, "LU")) |> ggplot() + geom_sf(aes(fill = ifelse(LAU_NAME == "Eschweiler" | LAU_NAME == "Wiltz", "Highlight", "Default"))) + scale_fill_manual(values = c("Highlight" = "red", "Default" = "grey")) +
  theme(legend.position = "none")
shapes_2012 |> filter(startsWith(CNTR_LAU_ID, "LU")) |> ggplot() + geom_sf()

```

| Country | Observations (Individ. File) | Geo Version (Individ. File) |
|---------|------------------------------|-----------------------------|
| AT      | 2357                         | 1 Jan 2012                  |
| BE      | 589                          | 1 Jan 2012                  |
| BG      | 4619                         | not specified               |
| CH      | 2499                         | not specified               |
| CY      | 614                          | not specified               |
| CZ      | 6251                         | 1 Jan 2012                  |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |
|         |                              |                             |

: Countries, their observations and geolocation characteristics

The R script [`prep-pop-data.R`](./prep-pop-data.R) documents all of the steps taken as part of the cleaning, reorganizing and georeferecing of the historic LAU population data.

ToDo: Add scatterplot for representing correlation between historic population figures and population figures delivered with shapefiles to represent strong correlation between historic interpolation and real figures.

```{r}
population |> 
  ggplot(mapping = aes(x = POP_2011_01_01, y = EUROGEOGRAPHICS_POP_2011_2012)) +
  geom_point() +
  geom_abline(slope = 1)
```

```{r}
#| eval: false

population |> 
  mutate(DEVIATION_POP_2011_EUROG = EUROGEOGRAPHICS_POP_2011_2012 / POP_2011_01_01) |> 
  filter(DEVIATION_POP_2011_EUROG > 1.05 | DEVIATION_POP_2011_EUROG < 0.95) |> 
  filter(DEVIATION_POP_2011_EUROG != 0) |> View()
```
